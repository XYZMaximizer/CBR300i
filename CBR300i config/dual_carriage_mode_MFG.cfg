# This file contains a configuration snippet for a dual extruder
# printer using dual carriages (an "IDEX" printer).
#
# The files "cartesian.py" and "idex_modes.py" by Tircown.
# FIRMWARE_VERSION:v0.10.0-287-gadc6184f 

#####################################################################
#  Variable for this configurations
#  ATTENTION: 
#  KLIPPER merges all [gcode_macro VARIABLE] into one configuration file.
#  If the variable name already exists it will be overwritten!
#####################################################################

[gcode_macro VARIABLE]
description: HELP: for list of variables send VARIABLE_STATUS
gcode:
#--- Offset coordinates for dual carriage ---
variable_offset_x: -0.22
variable_offset_y: 0.085
variable_offset_z: 0.05
#--- Auto_park parameters ---
variable_z_hop: 1.0
variable_autopark_movespeed: 2000
variable_autopark_feedrate: 6000
### ! Do not edit variable below this line !  ###
#-----------------------------------------------#
variable_auto_park: 1 # do not edit
variable_active_tool: 0 # do not edit
variable_z_restore: 0 # do not edit

#####################################################################
#  add HW config for dual-carriage 
#####################################################################

[dual_carriage]
axis: x
step_pin: PD5
dir_pin: !PD4
enable_pin: !PD6
microsteps: 16
rotation_distance: 20
#full_steps_per_rotation:400
#endstop_pin: tmc2209_stepper_x:virtual_endstop		#use w/ sensorless homing
endstop_pin: EXTR2:PB9
position_endstop: 44.5
position_max: 328
position_min: 44.5
homing_speed: 70

[tmc2209 dual_carriage]
uart_pin: PD3
interpolate: true
run_current: 0.950
hold_current: 0.600
stealthchop_threshold: 250
sense_resistor: 0.110


[extruder1]
step_pin: EXTR2: PD0
dir_pin: EXTR2: PD1
enable_pin: !EXTR2: PD2
microsteps: 16						#BMG/Geared Extruders
rotation_distance: 4.637 #orbiter LDO
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_cross_section: 70.0
max_extrude_only_distance: 500.0 # orbiter LDO
max_extrude_only_velocity: 120.0
max_extrude_only_accel: 1000.0
pressure_advance: 0.035
#pressure_advance_smooth_time: 0.040
#heater_pin: PB3
sensor_type: ATC Semitec 104GT-2	#E3D Thermistor
#heater_pin: EXTR2: PA2 #EBB42 v1.1
heater_pin: EXTR2: PB13 #EBB42 v1.2
sensor_pin: EXTR2: PA3
control: pid
pid_Kp: 16.13
pid_Ki: 1.1625
pid_Kd: 56.23
min_temp: -250
max_temp: 310
min_extrude_temp: 0

[tmc2209 extruder1]
uart_pin: EXTR2: PA15
interpolate: false					#Interpolation does not improve extrusion
run_current: 0.65
hold_current: 0.100
stealthchop_threshold: 0			#Disable stealthchop to decrease extruder temp and prevent skipping
sense_resistor: 0.110
driver_TBL: 0
driver_TOFF: 4
driver_HEND: 6
driver_HSTRT: 7

# T0 print cooling fan
[fan_generic fan]
pin: EXTR1: PA0
cycle_time: 0.0100
kick_start_time: 1.00
hardware_pwm: false

# T1 print  cooling fan
[fan_generic fan1]
pin: EXTR2: PA0
cycle_time: 0.0100
kick_start_time: 1.000
hardware_pwm: false

[respond]
# Enable the "M118" and "RESPOND" extended

[gcode_macro NOTIFY_WARN]
gcode:
  M300 S80 P20
  M300 S80 P20
 
[gcode_macro NOTIFY_END_PRINT]
gcode:
  M300 S80 P5
  M300 S80 P1000

[pause_resume]
# Pause/Resume functionality with support of position capture and restore.   

##############################################
## DUAL-CARRIAGES : FULL_CONTROL - AUTO-PARK
##############################################

############ DEFAULT TOOL #############################
[gcode_macro T0]
description: Set the default tool for T0
variable_default_tool: 0 # do not edit
variable_offset_x: 0
variable_offset_y: 0
variable_offset_z: 0
gcode:
    ### defaoult tool for G-code T0
    ACTIVATE_TOOL INDEX={default_tool}      
   
[gcode_macro T1]
description: Set the default tool for T1
variable_default_tool: 1 # do not edit
variable_offset_x: -0.22
variable_offset_y: 0.085
variable_offset_z: 0.05
gcode:
    ### defaoult tool for G-code T1
    ACTIVATE_TOOL INDEX={default_tool}   
  
############ ACTIVATE_TOOL #############################
[gcode_macro ACTIVATE_TOOL]
description: Activate the tool by index.
gcode:
    {% set user_vars = printer["gcode_macro VARIABLE"] %}   
    {% set toolname = ('extruder','extruder1')[params.INDEX|int] %}
    ### gcode offsets
    {% set offset_x = user_vars.offset_x if (params.INDEX|int) else 0 %}
    {% set offset_y = user_vars.offset_y if (params.INDEX|int) else 0 %}
    {% set offset_z = user_vars.offset_z if (params.INDEX|int) else 0 %}
    {% if printer.dual_carriage is defined and printer.dual_carriage.mode != 'FULL_CONTROL' %}
        ### ignore command in DUPLICATION and MIRRORED modes
        SET_GCODE_OFFSET X={offset_x} Y={offset_y} Z={offset_z}
    {% elif printer.toolhead.extruder != toolname %}
        M400       
        {% if user_vars.auto_park %}             
            PARK_TOOL            
        {% endif %}
        ### tool activation
        ACTIVATE_EXTRUDER EXTRUDER={toolname}
        SET_DUAL_CARRIAGE CARRIAGE={params.INDEX}
        SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE=active_tool VALUE={params.INDEX}
        ### print fan
        CARRIAGE_PRINT_FAN
        ### restore position
        {% if user_vars.auto_park %}                       
            CHANGE_TOOL T={params.INDEX}              
            RESTORE_Z_HOP               
        {% else %}  
            SET_GCODE_OFFSET X={offset_x} Y={offset_y} Z={offset_z}		
        {% endif %}
        #{% if toolname == 'extruder1' %}  
        #    SET_GCODE_OFFSET X_ADJUST={offset_x} Y_ADJUST={offset_y} Z_ADJUST={offset_z} MOVE=0
        #{% else %}  
        #    SET_GCODE_OFFSET X=0 Y=0 Z=0
        #{% endif %}
    {% endif %}

#[gcode_macro CLEAN_NOZZLE]
#description: Nozzle Cleaning Procedure.
#gcode:
#    #G91
#    #G1 E2.2 F2000 ;Compensate Filament Retract
#    #G90
#        # G91 ;relative positioning
#         #G1 E1 F2000 ; extrude 3mm
#        # M400
#        # G1 E-0.8 F1000 ; retract 0.5mm
#        # G90
#  {% set toolname = params.T|string %}   
#  {% if toolname == 'extruder' %}
#         G0 X1 F9000
#         G0 X18
#         G0 X1
#         G0 X18
#         G0 X1
#         G0 X18
#         G0 X1
#  {% elif toolname == 'extruder1' %}  
#         G0 X316 F9000
#         G0 X330
#         G0 X316
#         G0 X330	
#         G0 X316
#         G0 X330
#  {% endif %}


############ PARK_TOOL #############################
[gcode_macro PARK_TOOL]
description: Park the active toolhead.
gcode:
    #G91 ;relative positioning
    #G1 E-13 F{60*40} ;retract filament to prevent oozing inactive extruder
    #G90
    {% set user_vars = printer["gcode_macro VARIABLE"] %}
    Z_HOP_TOOL    
    SAVE_GCODE_STATE name=park_tool
	#SET_GCODE_OFFSET X=0 Y=0 Z=0	
    {% set stepper = ({'extruder':'stepper_x','extruder1':'dual_carriage'})[printer.toolhead.extruder] %}
    #G1 X{printer.configfile.config[(stepper)].position_endstop} F{user_vars.autopark_feedrate}
    G90                         ;absolute coordinate
    {% if printer.toolhead.extruder == 'extruder1' %}
      #G1 X326 F{user_vars.autopark_feedrate}
      #G1 X{printer.configfile.config[(stepper)].position_max} F{user_vars.autopark_feedrate}
      G1 X{user_vars.dual_x_park} F{user_vars.autopark_feedrate}
    {% else %}   
      G1 X{user_vars.left_x_park} F{user_vars.autopark_feedrate}
    {% endif %}
    #G91
    #G1 E3 F3000 ;Compensate Filament Retract
    #G90

########### Z_HOP_TOOL ############################## 
[gcode_macro Z_HOP_TOOL]
description: z-hop before action toolhead
gcode:
     {% set user_vars = printer["gcode_macro VARIABLE"] %}	
     {% set z_hop_tool = params.Z|default(user_vars.z_hop)|float %}     
     {% if z_hop_tool > 0.0 %}
       {% set max_z = printer.toolhead.axis_maximum.z|float %}
       {% set cur_z = printer.toolhead.position.z|float %}
       {% set z_safe = z_hop_tool if cur_z < (max_z - z_hop_tool) else (max_z - cur_z) %}       
       G91
       G1 Z{z_safe}
       G90
       ### info printer status and save z_restore
       {% if printer['idle_timeout'].state != "Printing" %}
         ### save variable z_safe to user variable z_restore
         SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE=z_restore VALUE={z_safe}
         {% else %}
         SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE=z_restore VALUE=0               
       {% endif %} 
     {% endif %}   
    
########### RESTORE_Z_HOP ############################## 
[gcode_macro RESTORE_Z_HOP]
description: restore z-hop 
gcode:
    {% set user_vars = printer["gcode_macro VARIABLE"] %}    
      {% if user_vars.z_restore != 0 %}
           G91
           G1 Z-{user_vars.z_restore}
           G90
      {% else %}          
           #REGENERATION_TOWER   ### if SET_DUAL_EXTRUDER MODE=5                          
      {% endif %}

########### CHANGE_TOOL ##############################
[gcode_macro CHANGE_TOOL]
description: Change the new toolhead.
gcode:
    ### gcode offsets
    {% set user_vars = printer["gcode_macro VARIABLE"] %}
    {% set offset_x = user_vars.offset_x if (params.T|int) else 0 %}
    {% set offset_y = user_vars.offset_y if (params.T|int) else 0 %}
    {% set offset_z = user_vars.offset_z if (params.T|int) else 0 %}      
     RESTORE_GCODE_STATE name=park_tool MOVE=0 MOVE_SPEED={user_vars.autopark_movespeed}
     SET_GCODE_OFFSET X={offset_x} Y={offset_y} Z={offset_z} MOVE=1 MOVE_SPEED={user_vars.autopark_movespeed} 

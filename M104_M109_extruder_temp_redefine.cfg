#####################################################################
#  Variable for this configurations
#  ATTENTION: If the variable already exists it will be overwritten!
#####################################################################

[gcode_macro VARIABLE]
gcode:

### ! Do not edit variable below this line !  ###
#--- both and offset temp ---
variable_offset_temp: 0.0  # do not edit
variable_both_heater: 1 # do not edit
#--- set offset temp for extruders ---
variable_extruder_offset_temp: 0.0  # do not edit
variable_extruder1_offset_temp: 0.0  # do not edit


##########################################################
# PRINTER HEATERS MANAGEMENT
# Redefine G-code command M104 and M109 
##########################################################

[gcode_macro M104]
rename_existing: M104.1
description: Overide "M104" to allow multiple extruders
gcode:
    {% set user_vars = printer["gcode_macro VARIABLE"] %}   
    {% set target_tool = params.T|default(user_vars.active_tool)|int %}
    {% set temp = params.S|default(0)|float %} 
    {% set macro_t = ('gcode_macro T0', 'gcode_macro T1')[target_tool] %} 
    {% set default_tool = printer[macro_t].default_tool %}    
    {% set default_heater = ('extruder', 'extruder1')[default_tool] %}  
    {% set both_heater = ('extruder', 'extruder1')[user_vars.both_heater] %}  
    ###
    {% set variable_offset = "%s%s" % (default_heater, '_offset_temp') %} 
    {% set target_offset = user_vars[variable_offset] %}
     {% if temp != 0 %}
       {% set both_temp = temp + user_vars.offset_temp|float %}      
     {% else %}
      ### reset all variable offset_temp
       {% set both_temp = 0.0 %} 
       SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE=offset_temp VALUE=0
       {% set temp = 0.0 %}
       {% set target_offset = 0.0 %}
       SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE=extruder_offset_temp VALUE=0   
       SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE=extruder1_offset_temp VALUE=0  
     {% endif %}
    {% if user_vars.mode_605 in [2,3] %}  ### Duplication, Mirrored mode
       SET_HEATER_TEMPERATURE HEATER="{default_heater}" TARGET={temp}
       SET_HEATER_TEMPERATURE HEATER="{both_heater}" TARGET={both_temp}         
    {% else %}
      {% if target_tool == 0 %}
        #SET_HEATER_TEMPERATURE HEATER="{default_heater}" TARGET={temp + target_offset}   
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp + target_offset}  
        SET_HEATER_TEMPERATURE HEATER=extruder1 TARGET={temp + target_offset}  
      {% else %}
        SET_HEATER_TEMPERATURE HEATER=extruder1 TARGET={temp + target_offset} 
      {% endif %}
    {% endif %}

#####################################################################

[gcode_macro M109]
rename_existing: M109.1
description: Overide "M109" to allow multiple extruders
gcode:
    {% set user_vars = printer["gcode_macro VARIABLE"] %} 
    {% set target_tool = params.T|default(user_vars.active_tool)|int %}
    {% set temp = params.S|default(0)|float %}
    ### accepted R from Marlin G-code
    {% if params.R is defined %}  
      {% set temp = params.R|default(0)|float %}
    {% endif %}  
 {% if temp !=0 %}
    {% set macro_t = ('gcode_macro T0', 'gcode_macro T1')[target_tool] %} 
    {% set default_tool = printer[macro_t].default_tool %}
    {% set default_heater = ('extruder', 'extruder1')[default_tool] %}     		
    {% set default_sensor = ('extruder', 'extruder1' )[default_tool] %}    
    {% set both_heater =('extruder', 'extruder1')[user_vars.both_heater] %} 		
    {% set both_temp = temp + user_vars.offset_temp|float %}    
    {% if user_vars.mode_605 in [2,3] %}  ### Duplication, Mirrored mode
       SET_HEATER_TEMPERATURE HEATER="{both_heater}" TARGET={both_temp}                
       SET_HEATER_TEMPERATURE HEATER="{default_heater}" TARGET={temp}
       TEMPERATURE_WAIT SENSOR="{default_heater}" MINIMUM={temp - 2.0} MAXIMUM={temp + 2.0}          
       SET_HEATER_TEMPERATURE HEATER="{both_heater}" TARGET={both_temp}     
      TEMPERATURE_WAIT SENSOR="{both_heater}" MINIMUM={both_temp - 2.0} MAXIMUM={both_temp + 2.0}       
    {% else %}
       SET_HEATER_TEMPERATURE HEATER="{default_heater}" TARGET={temp}
       TEMPERATURE_WAIT SENSOR="{default_heater}" MINIMUM={temp - 2.0} MAXIMUM={temp + 2.0}    
    {% endif %}
 {% endif %} 

#####################################################################

[gcode_macro SET_TEMP_OFFSET]
description: SET_TEMP_OFFSET T=<tool> R=<offset_temp>
gcode:
    {% set user_vars = printer["gcode_macro VARIABLE"] %}   
    {% set target_tool = params.T|default(user_vars.active_tool)|int %}
    {% set target_offset = params.R|default(0)|int %}
    ###
    {% set macro_t = ('gcode_macro T0', 'gcode_macro T1')[target_tool] %} 
    {% set default_tool = printer[macro_t].default_tool %}  
    {% set default_heater = ('extruder', 'extruder1')[default_tool] %}  
    ### 
    {% set variable_offset = "%s%s" % (default_heater, '_offset_temp') %} 
    {% set act_temp = printer[default_heater].target |float %}     
    {% if target_offset !=0  %}  
        {% if act_temp !=0 and target_offset|abs <= 10  %}        
          {% set temp = act_temp + (target_offset - user_vars[variable_offset]) %} 
           M104 T{default_tool} S{temp}
           RESPOND MSG="set T"{default_tool}" temp: "{temp}    
           SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE={variable_offset} VALUE={target_offset}
           RESPOND MSG="variable_"{variable_offset}":"{target_offset}
        {% else %}
           RESPOND MSG=" Set temperature first or offset must be range -10 to 10 !"           
        {% endif %}      
    {% else %}
           RESPOND MSG="Reset offset temp for T"{default_tool} 
           SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE={variable_offset} VALUE=0  
         {% set temp = act_temp - user_vars[variable_offset]  %} ####  
           M104 T{default_tool} S{temp}    
           RESPOND MSG="set T"{default_tool}" temp: "{temp}
    {% endif %} 